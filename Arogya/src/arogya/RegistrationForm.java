/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package arogya;
import java.sql.*;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;

/**
 *
 * @author Karan-PC
 */
public class RegistrationForm extends javax.swing.JFrame {

    /**
     * Creates new form RegistrationForm
     */
    public RegistrationForm() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        Image = new javax.swing.JLabel();
        OperatorName = new javax.swing.JLabel();
        Mobile = new javax.swing.JLabel();
        Pass = new javax.swing.JLabel();
        PassConfirm = new javax.swing.JLabel();
        NameField = new javax.swing.JTextField();
        MobileField = new javax.swing.JTextField();
        PassField = new javax.swing.JPasswordField();
        PassFieldConfirm = new javax.swing.JPasswordField();
        Ok = new javax.swing.JButton();
        Cancel = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Operator Login");
        setPreferredSize(new java.awt.Dimension(500, 500));
        setResizable(false);

        Image.setIcon(new javax.swing.ImageIcon(getClass().getResource("/1.png"))); // NOI18N

        OperatorName.setText("Operator Name");

        Mobile.setText("Mobile no.");

        Pass.setText("Password");

        PassConfirm.setText("Conform Password");

        PassFieldConfirm.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                PassFieldConfirmActionPerformed(evt);
            }
        });

        Ok.setText("Ok");
        Ok.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                OkActionPerformed(evt);
            }
        });

        Cancel.setText("Cancel");
        Cancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CancelActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(Image)
            .addGroup(layout.createSequentialGroup()
                .addGap(58, 58, 58)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(Pass)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(123, 123, 123)
                        .addComponent(Ok)
                        .addGap(35, 35, 35)
                        .addComponent(Cancel))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(OperatorName)
                                    .addGap(71, 71, 71))
                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                    .addComponent(Mobile)
                                    .addGap(96, 96, 96)))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(PassConfirm)
                                .addGap(55, 55, 55)))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(NameField)
                            .addComponent(MobileField)
                            .addComponent(PassField)
                            .addComponent(PassFieldConfirm, javax.swing.GroupLayout.DEFAULT_SIZE, 174, Short.MAX_VALUE)))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(Image)
                .addGap(49, 49, 49)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(OperatorName)
                    .addComponent(NameField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(36, 36, 36)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Mobile)
                    .addComponent(MobileField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(41, 41, 41)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Pass)
                    .addComponent(PassField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(37, 37, 37)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(PassConfirm)
                    .addComponent(PassFieldConfirm, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 149, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Ok)
                    .addComponent(Cancel))
                .addGap(85, 85, 85))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void PassFieldConfirmActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_PassFieldConfirmActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_PassFieldConfirmActionPerformed

    private void OkActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_OkActionPerformed
        // TODO add your handling code here:
       if(NameField.getText().equals("") || MobileField.getText().equals("") || PassField.getPassword().length==0 || PassFieldConfirm.getPassword().length==0){
       
            JOptionPane.showMessageDialog(null, "Incomplete data ", "Alert", JOptionPane.INFORMATION_MESSAGE);
       }
       else
       {
           Connection con;
           try {
               con = DriverManager.getConnection("jdbc:mysql://localhost/arogya","root","root");
               Statement st = con.createStatement();
               String val = ""+((int)(Math.random()*9000)+1000); 
               String name,mobile,pass,passconfirm;
               name= NameField.getText();
               mobile = MobileField.getText();
               pass = String.valueOf(PassField.getPassword());
               passconfirm = String.valueOf(PassFieldConfirm.getPassword());
               
               if(pass.equals(passconfirm) && (mobile.length()==10))
               {
               st.executeUpdate("INSERT INTO operators VALUES('" + name + "','" + 
                       mobile + "','" + pass + "','" + val +"')"); 
               
               JOptionPane.showConfirmDialog(null, "Your Operator ID is - "+val+" Please remember it for future",
                "Result", JOptionPane.DEFAULT_OPTION,
                JOptionPane.PLAIN_MESSAGE);
          
        st.close();
        con.close();
               }
               else
               {
                   JOptionPane.showMessageDialog(null, "Check Your Entries", "Alert", JOptionPane.INFORMATION_MESSAGE);
               }
           } catch (SQLException ex) {
               Logger.getLogger(RegistrationForm.class.getName()).log(Level.SEVERE, null, ex);
           }
        
       }
       // }
    }//GEN-LAST:event_OkActionPerformed

    private void CancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CancelActionPerformed
        // TODO add your handling code here:
        new Login().setVisible(true);
        this.dispose();
    }//GEN-LAST:event_CancelActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(RegistrationForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(RegistrationForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(RegistrationForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(RegistrationForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new RegistrationForm().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Cancel;
    private javax.swing.JLabel Image;
    private javax.swing.JLabel Mobile;
    private javax.swing.JTextField MobileField;
    private javax.swing.JTextField NameField;
    private javax.swing.JButton Ok;
    private javax.swing.JLabel OperatorName;
    private javax.swing.JLabel Pass;
    private javax.swing.JLabel PassConfirm;
    private javax.swing.JPasswordField PassField;
    private javax.swing.JPasswordField PassFieldConfirm;
    // End of variables declaration//GEN-END:variables
}
